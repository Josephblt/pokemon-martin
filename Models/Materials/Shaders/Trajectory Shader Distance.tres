[gd_resource type="VisualShader" load_steps=10 format=2]

[sub_resource type="VisualShaderNodeInput" id=1]
input_name = "normal"

[sub_resource type="VisualShaderNodeInput" id=2]
input_name = "view"

[sub_resource type="VisualShaderNodeFresnel" id=3]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeVectorScalarMix" id=4]

[sub_resource type="VisualShaderNodeScalarInterp" id=5]

[sub_resource type="VisualShaderNodeColorUniform" id=6]
uniform_name = "start_color"

[sub_resource type="VisualShaderNodeColorUniform" id=7]
uniform_name = "end_color"

[sub_resource type="VisualShaderNodeInput" id=8]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorOp" id=9]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 256, 256, 256 ) ]
operator = 2

[resource]
code = "shader_type spatial;
render_mode specular_schlick_ggx, unshaded, ensure_correct_normals, shadows_disabled, ambient_light_disabled;

uniform vec4 start_color : hint_color;
uniform vec4 end_color : hint_color;



void vertex() {
// Input:2
	vec3 n_out2p0 = VERTEX;

// VectorOp:3
	vec3 n_in3p1 = vec3(256.00000, 256.00000, 256.00000);
	vec3 n_out3p0 = n_out2p0 * n_in3p1;

// Output:0
	COLOR.rgb = n_out3p0;

}

void fragment() {
// ColorUniform:6
	vec3 n_out6p0 = start_color.rgb;
	float n_out6p1 = start_color.a;

// ColorUniform:7
	vec3 n_out7p0 = end_color.rgb;
	float n_out7p1 = end_color.a;

// Input:17
	vec3 n_out17p0 = NORMAL;

// Input:19
	vec3 n_out19p0 = VIEW;

// Fresnel:20
	float n_in20p3 = 1.00000;
	float n_out20p0 = pow(1.0 - clamp(dot(n_out17p0, n_out19p0), 0.0, 1.0), n_in20p3);

// VectorScalarMix:21
	vec3 n_out21p0 = mix(n_out6p0, n_out7p0, n_out20p0);

// ScalarMix:22
	float n_out22p0 = mix(n_out6p1, n_out7p1, n_out20p0);

// Output:0
	ALBEDO = n_out21p0;
	ALPHA = n_out22p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -247.347, -145.836 )
flags/ambient_light_disabled = true
flags/ensure_correct_normals = true
flags/shadows_disabled = true
flags/unshaded = true
nodes/vertex/0/position = Vector2( 420, 180 )
nodes/vertex/2/node = SubResource( 8 )
nodes/vertex/2/position = Vector2( 40, 180 )
nodes/vertex/3/node = SubResource( 9 )
nodes/vertex/3/position = Vector2( 220, 180 )
nodes/vertex/connections = PoolIntArray( 2, 0, 3, 0, 3, 0, 0, 6 )
nodes/fragment/0/position = Vector2( 680, 0 )
nodes/fragment/6/node = SubResource( 6 )
nodes/fragment/6/position = Vector2( 220, 0 )
nodes/fragment/7/node = SubResource( 7 )
nodes/fragment/7/position = Vector2( 220, 120 )
nodes/fragment/17/node = SubResource( 1 )
nodes/fragment/17/position = Vector2( 0, 0 )
nodes/fragment/19/node = SubResource( 2 )
nodes/fragment/19/position = Vector2( 0, 80 )
nodes/fragment/20/node = SubResource( 3 )
nodes/fragment/20/position = Vector2( 220, 240 )
nodes/fragment/21/node = SubResource( 4 )
nodes/fragment/21/position = Vector2( 440, 0 )
nodes/fragment/22/node = SubResource( 5 )
nodes/fragment/22/position = Vector2( 440, 120 )
nodes/fragment/connections = PoolIntArray( 17, 0, 20, 0, 19, 0, 20, 1, 6, 0, 21, 0, 20, 0, 21, 2, 21, 0, 0, 0, 7, 0, 21, 1, 6, 1, 22, 0, 7, 1, 22, 1, 20, 0, 22, 2, 22, 0, 0, 1 )
